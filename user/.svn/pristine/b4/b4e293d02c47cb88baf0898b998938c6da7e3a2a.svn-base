package com.lieying.user.entity;

import java.io.Serializable;
import java.sql.Timestamp;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.Type;
import org.hibernate.validator.constraints.NotEmpty;

@Entity
@Table(name="sys_user")
public class SysUser implements Serializable, Cloneable {
	
	private static final long serialVersionUID = 1L;
	
	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private Long id;
	/**
	 * 用户名，账号 用于登录
	 */
	@NotEmpty
	@Column(name="user_name",unique=true, nullable=false,length=64)
	private String userName;
	
	@Column(name="nick_name",length=64)
	private String nickName;
	
	@NotEmpty
	@Column(length=100)
	private String password;
	
	@Type(type="yes_no")
	@Column
	private boolean locked;
	
	@Type(type="yes_no")
	@Column
	private boolean disabled;
	
	@Column(length=100)
	private String salt;
	
	@Column
	private Timestamp createDate;
	
	@Column
	private Timestamp updateDate;
	
	@Column
	private Timestamp lastLoginDate;
	
	/**
	 * 邮件，也可用于登录 保证唯一
	 */
	@Column(length=100)
	private String email;
	
	/**
	 * 电话号码， 也可用于登录 保证唯一
	 */
	@Column(length=13)
	private String telephone;
	/**
	 * 性别， 0-女，1-男，2-其它
	 */
	@Column(length=3)
	private Integer sex; 
	/**
	 * 生日
	 */
	@Column
	private Timestamp birthday;
	
	/**
	 *来源，0-微信，1-新浪微博，2-腾讯微博，3-QQ空间，4-QQ好友
	 */
	@Column(length=3)
	private Integer origin;
	
	@Column(length=300)
	private String city;
	
	@Transient
	private String roleNames;
	
	public SysUser() {
		setCreateDate(new Timestamp(System.currentTimeMillis()));
		setUpdateDate(new Timestamp(System.currentTimeMillis()));
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getUserName() {
		return userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public boolean isLocked() {
		return locked;
	}

	public void setLocked(boolean locked) {
		this.locked = locked;
	}

	public boolean isDisabled() {
		return disabled;
	}

	public void setDisabled(boolean disabled) {
		this.disabled = disabled;
	}

	public Timestamp getCreateDate() {
		return createDate;
	}

	public void setCreateDate(Timestamp createDate) {
		this.createDate = createDate;
	}

	public Timestamp getUpdateDate() {
		return updateDate;
	}

	public void setUpdateDate(Timestamp updateDate) {
		this.updateDate = updateDate;
	}

	public Timestamp getLastLoginDate() {
		return lastLoginDate;
	}

	public void setLastLoginDate(Timestamp lastLoginDate) {
		this.lastLoginDate = lastLoginDate;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	
	public String getCredentialsSalt() {
        return userName + salt;
    }

	public String getSalt() {
		return salt;
	}

	public void setSalt(String salt) {
		this.salt = salt;
	}

	public String getRoleNames() {
		return roleNames;
	}

	public void setRoleNames(String roleNames) {
		this.roleNames = roleNames;
	}

	public String getNickName() {
		return nickName;
	}
	

	public void setNickName(String nickName) {
		this.nickName = nickName;
	}
	

	public String getTelephone() {
		return telephone;
	}
	

	public void setTelephone(String telephone) {
		this.telephone = telephone;
	}
	

	public Integer getSex() {
		return sex;
	}
	

	public void setSex(Integer sex) {
		this.sex = sex;
	}
	

	public Timestamp getBirthday() {
		return birthday;
	}
	

	public void setBirthday(Timestamp birthday) {
		this.birthday = birthday;
	}
	

	public Integer getOrigin() {
		return origin;
	}
	

	public void setOrigin(Integer origin) {
		this.origin = origin;
	}
	

	public String getCity() {
		return city;
	}
	

	public void setCity(String city) {
		this.city = city;
	}

	@Override
	public String toString() {
		return "SysUser [id=" + id + ", userName=" + userName + ", nickName=" + nickName + ", password=" + password
				+ ", locked=" + locked + ", disabled=" + disabled + ", salt=" + salt + ", createDate=" + createDate
				+ ", updateDate=" + updateDate + ", lastLoginDate=" + lastLoginDate + ", email=" + email
				+ ", telephone=" + telephone + ", sex=" + sex + ", birthday=" + birthday + ", origin=" + origin
				+ ", city=" + city + ", roleNames=" + roleNames + "]";
	}
	
	public SysUser clone() {
		SysUser user = null;
		try {
			user = (SysUser)super.clone();
		} catch (CloneNotSupportedException e) {
			e.printStackTrace();
		}
		return user;
	}
	
	
}
